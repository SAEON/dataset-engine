services:
  ocean_model_db:
    container_name: ocean_model_db
    image: postgis/postgis:17-3.5-alpine
    restart: unless-stopped
    ports:
      - "5430:5432" # Host port:Container port
    environment:
      - POSTGRES_USER=ocean_model_db_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ocean_model_db
    volumes:
      - ./pg_data:/var/lib/postgresql/data # This looks correct for PostGIS data persistence
    healthcheck: # Adding healthcheck for robustness, as we discussed
      test: ["CMD-SHELL", "pg_isready -U ocean_model_db_user -d ocean_model_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

# Define named volumes if you plan to use them for data persistence (e.g., pg_data)
# volumes:
#   pg_data:

# Define networks for inter-service communication (important for Martin to find PostGIS)
networks:
  default: # Docker Compose creates a default network, services in it can talk to each other by name
    name: ocean_model_network # Optional: give it a custom name


# docker compose exec ocean_model_db psql -U ocean_model_db_user -d ocean_model_db